#!/usr/bin/env bash

set -euo pipefail

dir="${PWD##*/}"
dir="${dir%%-*}"
if [ "$dir" == build ]; then cd ..; fi

header=$(find source -name unit-test.hpp)
if [ "$header" ]; then
    header=${header#source/}
else
    header=rs-maker/unit-test.hpp
fi

project="${PWD##*/}"
project="${project%-lib}"
project="$(tr A-Z a-z <<< "$project")"

make=source/CMakeLists.txt
main=source/test/unit-test.cpp
temp=source/test/unit-test.temp.cpp

testfiles=$(grep -E '^ +test/.*\btest\b.*\.cpp$' "$make" \
    | sed -E 's!^ +!source/!' \
    | grep -Fv "$main")

cat > $temp << EOF
#include "$header"

int main(int argc, char** argv) {

    RS::UnitTest::begin_tests(argc, argv);

EOF

for file in $testfiles; do
    if [ -f $file ]; then
        echo "    // ${file##*/}" >> $temp
        grep -Eh '^void test_' $file \
            | sed -E 's/^void test_([a-z0-9_]+)\(\).*$/\1/' \
            | grep -Ev '^void ' \
            | sed -E 's/.+/    UNIT_TEST(&)/' \
            >> $temp \
            || true
        echo >> $temp
    fi
done

cat >> $temp << EOF
    return RS::UnitTest::end_tests();

}
EOF

if cmp -s $temp $main; then
    rm $temp
else
    mv $temp $main
fi
